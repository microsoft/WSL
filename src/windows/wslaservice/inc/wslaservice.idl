/*++

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    wslaservice.idl

Abstract:

    This file contains the COM object definitions used to talk with the WSLa
    service "WslaService"

--*/

import "unknwn.idl";
import "wtypes.idl";

cpp_quote("#ifdef __cplusplus")
cpp_quote("class DECLSPEC_UUID(\"a9b7a1b9-0671-405c-95f1-e0612cb4ce8f\") WSLAUserSession;")
cpp_quote("#endif")

typedef
struct _WSL_VERSION {
    ULONG Major;
    ULONG Minor;
    ULONG Revision;
} WSL_VERSION;


typedef [system_handle(sh_socket)] HANDLE HVSOCKET_HANDLE;


[
    uuid(7BC4E198-6531-4FA6-ADE2-5EF3D2A04DFE),
    pointer_default(unique),
    object
]
interface ITerminationCallback : IUnknown
{
    HRESULT OnTermination(ULONG Reason, LPCWSTR Details);
};

[
    uuid(82A7ABC8-6B50-43FC-AB96-15FBBE7E8761),
    pointer_default(unique),
    object
]
interface IWSLASession : IUnknown
{

}

typedef
struct _WSLA_SESSION_CONFIGURATION {
    LPCWSTR DisplayName; // App display name
    LPCWSTR StoragePath; // Used to store container images and scratch
} WSLA_SESSION_CONFIGURATION;


[
    uuid(82A7ABC8-6B50-43FC-AB96-15FBBE7E8760),
    pointer_default(unique),
    object
]
interface IWSLAUserSession : IUnknown
{
    HRESULT GetVersion([out] WSL_VERSION* Error);
    HRESULT CreateSession([in] const WSLA_SESSION_CONFIGURATION* Settings, [out] IWSLASession** WslaSession);
    HRESULT ReleaseSession([in] const IWSLASession* WslaSession);
    HRESULT ListSessions(
        [out] ULONG* SessionCount,
        [out, size_is(, *SessionCount)] IWSLASession*** WslaSessions
    );
}